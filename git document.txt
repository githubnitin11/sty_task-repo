git documents 

go in folder and oen there gitbash so directly you will enter in that folder in git bash.

to set username and email in git 

$git config --global user.name "nitin"

$git config --global user.email "misalnitin956@gmail.com"

$git config user.name --> to check username 

$ git status -->> to check status of git show any repository is here or not 
$git init -->> create a git repository i.e we created folder as git repo to store your file. 
this cmd your foder get coverted in to git repository.

But remember if you not created any repo in git and you clone repo from another github acc.
then automatically one folder will be create and it will make as repositpory for this code. i.e we are coping repositoy from another acc.

$git add --a to add all files from working area to staging area

 $git status -->> to check status of git show any repository is here or not 

$git commit -m "Initial commit" ---> to commite your code in locale repo 

$git log -->> it show all commit 

so whenever you will change file and check git status it will show you changes is madhe.

if you want to add only changed file then use 

$git add filename -->> file name that you want to add in stagging

then use git commit 

to delete git repository

$rm -rf .git --> i.e our git repository is deleted 

q -->> useed to quite process in git 

video - 7 

# to ignore any file in git we have to create one file by name .gitignore and in that file write name of file which we want to ignore.
ex- we have error.log file and we want to ignore it then 
touch .gitignore

vi .gitignore and paste here name of file wich we have to ignore i.e error.log or *.extention of file. and for directoryname/  (if you want to ignore only outer dir /dir/)
but remember we have to add file in git ignire before we add in stagging area i.e before using git add . 
so untracked file will be ignore 

git add . --->> to add gitignore file in stagging area 

then commite this file like 
git commit -m "added git ignore"

git remote add origin https://github.com/githubnitin11/sty_task-repo.git

git push -u origin master 

when you push 2nd time if it gives for that use 
 git push -u origin master --force


so now when any changes in error.log no any effect.

you can chack by git status. 

stop - 8

#git diff cmd used for compaisre your code in stagging area and working area of same file.
ex . you have created file1 then you commite it. after commiting and have done changes again in same file.
so use #git diff then you can see diff in same file 

$git diff --staged -->> shows diffarance of file that you have commited. same above but here show diffacence in between last to commite of file and present working area.


to do direct commite from working area to local repo
$git commit -a -m "commite info"

to remove any file in git 
$git rm file name 

to rename the file 
$git mv oldnameoffile newnameonfile 

if privius tracked file you want to untrack then we have stop exiplicitaly traking of file --> file will not be delete
add this file in .gitignore file and then use 
$git rm --cached filename

stop - video 11

imp ->> whenever we use git add. git will start tracking the file which we have added 

whenever we cloning repo from online we can copy this in one folder and we can choose folder name 
ex $git clone url of git pero clonnning and foldername -->> so here new repo will be create by foldername.

go in folder and oprn gitbash here and check $git status so you can see this is git repo 

$git log -p --->> gives the privious commite and also show what new things added and what old things removed.

if we want to see perticular last commit

$git log -p -(no.of commite we want to see) ex - $git log -p -3 -->> it will show last 3 lines 

$git log --stat also show commit but in short 
$git log --pretty=short small info aboute commite

$git log --since=2.days --->> it will show last two days commit for two moths we use 

$git log --since=2.months -->>for two moths we use 

$git log --pretty=format:%h --%an ---->> %h and %an gives us outpute in commit hash and author nmae

$ git log --> we can use simple  


video - 12 
after you modified and added you file in stagging area 
if you want to move your file from stagging area to unstagging area then use. 
but 1st you have to midif.file then you have to add this file in staggging area bt git add .
$git restore --staged <file name>

 
suppose you have edite file and after that you realise 1st info was correct then how to recover it.??
 for that you have to use cmd
$git checkout -- <filename>-->> gives privious stage code.

but for no of file want to go back instage then use 
$git checkout -f 

video - 13



hi 

i am looking for a job in awscloud/devops.

if any vacancy please let me know 

Alwyn Dsouza  1st degree connection1st

